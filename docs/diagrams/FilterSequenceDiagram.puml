@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":FlashcardAppParser" as FlashcardAppParser LOGIC_COLOR
participant ":FilterCommandParser" as FilterCommandParser LOGIC_COLOR
participant "filterBuilder:FilterBuilder" as FilterBuilder LOGIC_COLOR
participant "filterCommand:FilterCommand" as FilterCommand LOGIC_COLOR
participant "result:CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":ModelManager" as Model MODEL_COLOR
end box
[-> LogicManager : execute("filter i/1 2 3 l/Chinese")
activate LogicManager

LogicManager -> FlashcardAppParser : parseCommand("filter i/1 2 3 l/Chinese")
activate FlashcardAppParser

create FilterCommandParser
FlashcardAppParser -> FilterCommandParser
activate FilterCommandParser

FilterCommandParser --> FlashcardAppParser
deactivate FilterCommandParser

FlashcardAppParser -> FilterCommandParser: parse("i/1 2 3 l/Chinese")
activate FilterCommandParser

create FilterBuilder
FilterCommandParser -> FilterBuilder
activate FilterBuilder

FilterBuilder --> FilterCommandParser :filterBuilder
deactivate FilterBuilder

ref over FilterCommandParser, FilterBuilder
    set filters
end
create FilterCommand
FilterCommandParser -> FilterCommand : FilterCommand(filterBuilder)
activate FilterCommand

FilterCommand --> FilterCommandParser : filterCommand
deactivate FilterCommand

FilterCommandParser --> FlashcardAppParser: filterCommand
deactivate FilterCommandParser

FlashcardAppParser --> LogicManager : filterCommand
deactivate FlashcardAppParser

LogicManager -> FilterCommand : execute()
activate FilterCommand

FilterCommand -> FilterBuilder : buildFilter(model)
activate FilterBuilder

FilterBuilder --> FilterCommand : predicate
deactivate FilterBuilder


FilterCommand -> Model : updateFilteredFlashcardList(predicate)
activate Model

Model --> FilterCommand
deactivate Model

create CommandResult
FilterCommand -> CommandResult
activate CommandResult

CommandResult --> FilterCommand : result
deactivate CommandResult

FilterCommand --> LogicManager : result
deactivate FilterCommand

[<--LogicManager : result
deactivate LogicManager
@enduml
