@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AweParser" as AweParser LOGIC_COLOR
participant ":GroupAddTagCommand" as GroupAddTagCommand LOGIC_COLOR
participant "newGroup:Group" as Group LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("groupaddtag gn/Bali t/3day")
activate LogicManager

LogicManager -> AweParser : parseCommand("groupaddtag gn/Bali t/3day")
activate AweParser

/'Clarify with tutor if there is a need to display GroupAddTagCommandParser class within the ref'/
note right
Same as CreateGroupCommand
ref frame except with
GroupAddTagCommand
and GroupAddTagCommandParser
end note
group ref [get groupAddTagCommand]
create GroupAddTagCommand
AweParser -> GroupAddTagCommand
activate GroupAddTagCommand
GroupAddTagCommand --> AweParser
deactivate GroupAddTagCommand
end group




AweParser --> LogicManager : groupAddTagCommand
deactivate AweParser

LogicManager -> GroupAddTagCommand : execute()
activate GroupAddTagCommand

loop for every tag to be added
    GroupAddTagCommand -> Group : addTag(newTags)
    activate Group
    Group --> GroupAddTagCommand : newGroup
    deactivate Group
end
'Hidden arrow to position the destroy marker below the end of the activation bar.
Group -[hidden]-> AweParser
destroy Group

GroupAddTagCommand -> Model : setGroup(oldGroup, newGroup)
activate Model

Model --> GroupAddTagCommand
deactivate Model

create CommandResult
GroupAddTagCommand -> CommandResult
activate CommandResult

CommandResult --> GroupAddTagCommand : result
deactivate CommandResult

GroupAddTagCommand --> LogicManager : result
deactivate GroupAddTagCommand

[<--LogicManager
deactivate LogicManager
@enduml
