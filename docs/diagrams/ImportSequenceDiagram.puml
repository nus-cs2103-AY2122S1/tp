@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":SportsPaParser" as SportsPaParser LOGIC_COLOR
participant ":ImportCommandParser" as ImportCommandParser LOGIC_COLOR
participant "i:ImportCommand" as ImportCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("import myFile.csv")
activate LogicManager

LogicManager -> SportsPaParser : parseCommand("import myFile.csv")
activate SportsPaParser

create ImportCommandParser
SportsPaParser -> ImportCommandParser
activate ImportCommandParser

ImportCommandParser --> SportsPaParser
deactivate ImportCommandParser

SportsPaParser -> ImportCommandParser : parse("import myFile.csv")
activate ImportCommandParser

create ImportCommand
ImportCommandParser -> ImportCommand
activate ImportCommand

ImportCommand --> ImportCommandParser : i
deactivate ImportCommand

ImportCommandParser --> SportsPaParser : i
deactivate ImportCommandParser
'Hidden arrow to position the destroy marker below the end of the activation bar.
ImportCommandParser -[hidden]-> SportsPaParser
destroy ImportCommandParser

SportsPaParser --> LogicManager : i
deactivate SportsPaParser

LogicManager -> ImportCommand : execute()
activate ImportCommand

loop until all imported members have been iterated

    ImportCommand -> Model : isValidImport(m)
    activate Model

    Model --> ImportCommand
    deactivate Model

    ImportCommand -> Model : hasMember(m)
    activate Model

    Model --> ImportCommand
    deactivate Model

    ImportCommand -> Model : setMember(p)
    activate Model

    Model --> ImportCommand
    deactivate Model

end

create CommandResult
ImportCommand -> CommandResult
activate CommandResult

CommandResult --> ImportCommand
deactivate CommandResult

ImportCommand --> LogicManager : result
deactivate ImportCommand

[<--LogicManager
deactivate LogicManager

destroy ImportCommand
@enduml
