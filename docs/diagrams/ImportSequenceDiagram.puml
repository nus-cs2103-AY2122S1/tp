@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":FlashcardAppParser" as FlashcardAppParser LOGIC_COLOR
participant ":ImportCommandParser" as ImportCommandParser LOGIC_COLOR
participant "importCommand:ImportCommand" as ImportCommand LOGIC_COLOR
participant "result:CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":ModelManager" as Model MODEL_COLOR
end box

[-> LogicManager : execute("import dictionary.csv")
activate LogicManager

LogicManager -> FlashcardAppParser : parseCommand("import dictionary.csv")
activate FlashcardAppParser

create ImportCommandParser
FlashcardAppParser -> ImportCommandParser
activate ImportCommandParser

ImportCommandParser --> FlashcardAppParser
deactivate ImportCommandParser

FlashcardAppParser -> ImportCommandParser: parse("dictionary.csv")
activate ImportCommandParser

create ImportCommand
ImportCommandParser -> ImportCommand
activate ImportCommand

ImportCommand --> ImportCommandParser:importCommand
deactivate ImportCommand

ImportCommandParser --> FlashcardAppParser:importCommand
deactivate ImportCommandParser

FlashcardAppParser --> LogicManager:importCommand
deactivate FlashcardAppParser

LogicManager -> ImportCommand : execute()
activate ImportCommand

ref over ImportCommand
    import from CSV file
end

ImportCommand -> ImportCommand: validateCsvContentAreValidFlashcards(csvContent)
activate ImportCommand
ImportCommand --> ImportCommand: validatedFlashcards
deactivate ImportCommand

loop until all valid flashcards have been added
    ImportCommand -> Model: hasFlashcard(flashcard)
    activate Model
    Model --> ImportCommand: isFlashcardInModel
    deactivate Model
    opt if !isFlashcardInModel
        ImportCommand -> Model: addFlashcard(flashcard)
        activate Model
        Model --> ImportCommand:
        deactivate Model
    end
end

create CommandResult
ImportCommand -> CommandResult
activate CommandResult

CommandResult --> ImportCommand:result
deactivate CommandResult

ImportCommand --> LogicManager : result
deactivate ImportCommand


[<--LogicManager:result
deactivate LogicManager
@enduml
