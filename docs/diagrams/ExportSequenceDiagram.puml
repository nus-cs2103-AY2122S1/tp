@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":ExportCommandParser" as ExportCommandParser LOGIC_COLOR
participant "e:ExportCommand" as ExportCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
participant "tempData:AddressBook" as AddressBook LOGIC_COLOR
participant ":JsonAddressBookStorage" as JsonAddressBookStorage LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box

box Output STORAGE_COLOR_T1
participant ":Output" as Output STORAGE_COLOR
end box



[-> LogicManager : execute("export data/toImport.json")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("export data/toImport.json")
activate AddressBookParser

create ExportCommandParser
AddressBookParser -> ExportCommandParser
activate ExportCommandParser

ExportCommandParser --> AddressBookParser
deactivate ExportCommandParser

AddressBookParser -> ExportCommandParser : parse("data/toExport.json")
activate ExportCommandParser

create ExportCommand
ExportCommandParser -> ExportCommand
activate ExportCommand

ExportCommand --> ExportCommandParser : e
deactivate ExportCommand

ExportCommandParser --> AddressBookParser : e
deactivate ExportCommandParser

'Hidden arrow to position the destroy marker below the end of the activation bar.
ExportCommandParser -[hidden]-> AddressBookParser
destroy ExportCommandParser

AddressBookParser --> LogicManager : e
deactivate AddressBookParser

LogicManager -> ExportCommand : execute()
activate ExportCommand

ExportCommand -> Model : getFilteredPersonList()
activate Model

Model --> ExportCommand : lastShownList
deactivate Model

create AddressBook
ExportCommand -> AddressBook
activate AddressBook

AddressBook -> AddressBook : setPersons(lastShownList)
activate AddressBook
deactivate AddressBook

AddressBook -> ExportCommand
deactivate AddressBook

ExportCommand -> JsonAddressBookStorage
activate JsonAddressBookStorage


JsonAddressBookStorage ->  JsonAddressBookStorage: saveAddressBook(tempData)
activate JsonAddressBookStorage


JsonAddressBookStorage -> Output : saveJsonFile(tempData, data/toExport.json)
deactivate JsonAddressBookStorage
deactivate JsonAddressBookStorage






create CommandResult
ExportCommand -> CommandResult
activate CommandResult

CommandResult --> ExportCommand
deactivate CommandResult

ExportCommand --> LogicManager : result
deactivate ExportCommand

[<--LogicManager
deactivate LogicManager
@enduml
