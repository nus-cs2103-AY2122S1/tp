@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":EditGroupCommandParser" as EditGroupCommandParser LOGIC_COLOR
participant "d:EditGroupDescriptor" as EditGroupDescriptor LOGIC_COLOR
participant "c:EditGroupCommand" as EditGroupCommand LOGIC_COLOR
participant "r:CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box
[-> LogicManager : execute("editG 1 n/CS2103T")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("editG 1 n/CS2103T")
activate AddressBookParser

create EditGroupCommandParser
AddressBookParser -> EditGroupCommandParser
activate EditGroupCommandParser

EditGroupCommandParser --> AddressBookParser
deactivate EditGroupCommandParser

AddressBookParser -> EditGroupCommandParser : parse("1 n/CS2103T")
activate EditGroupCommandParser

create EditGroupDescriptor
EditGroupCommandParser -> EditGroupDescriptor
activate EditGroupDescriptor

EditGroupDescriptor --> EditGroupCommandParser : d
deactivate EditGroupDescriptor

create EditGroupCommand
EditGroupCommandParser -> EditGroupCommand
activate EditGroupCommand

EditGroupCommand --> EditGroupCommandParser : c
deactivate EditGroupCommand

EditGroupCommandParser --> AddressBookParser : c
destroy EditGroupCommandParser

AddressBookParser --> LogicManager : c
deactivate AddressBookParser
LogicManager -> LogicManager : checkIfCommandCanRunInApplicationState(c)
activate LogicManager
LogicManager --> LogicManager
deactivate LogicManager

LogicManager -> EditGroupCommand : execute()
activate EditGroupCommand

ref over EditGroupCommand, Model
Edit group
end ref

create CommandResult
EditGroupCommand -> CommandResult
activate CommandResult
CommandResult --> EditGroupCommand : r
deactivate CommandResult

EditGroupCommand --> LogicManager : r
deactivate EditGroupCommand

[<--LogicManager
deactivate LogicManager
@enduml
