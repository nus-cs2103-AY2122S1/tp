@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":CliTutorsParser" as CliTutorsParser LOGIC_COLOR
participant ":FindCommandParser" as FindCommandParser LOGIC_COLOR
participant "f:FindCommand" as FindCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant "p:ChainedPredicate" as ChainedPredicate MODEL_COLOR
participant ":Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("find s n/David")
activate LogicManager

LogicManager -> CliTutorsParser : parseCommand("find s n/David")
activate CliTutorsParser

create FindCommandParser
CliTutorsParser -> FindCommandParser
activate FindCommandParser

CliTutorsParser <-- FindCommandParser
deactivate FindCommandParser

CliTutorsParser -> FindCommandParser : parse(" s n/David")
activate FindCommandParser

create ChainedPredicate
FindCommandParser -> ChainedPredicate
activate ChainedPredicate

ChainedPredicate --> FindCommandParser : p
deactivate ChainedPredicate

create FindCommand
FindCommandParser -> FindCommand : FindCommand(p)
activate FindCommand

FindCommandParser <-- FindCommand : f
deactivate FindCommand

FindCommandParser --> CliTutorsParser : f
deactivate FindCommandParser

CliTutorsParser --> LogicManager : f
deactivate CliTutorsParser
destroy FindCommandParser

LogicManager -> FindCommand : execute()
activate FindCommand

FindCommand -> Model : updateFilteredStudentList(p)
activate Model
FindCommand <-- Model
deactivate Model

create CommandResult
FindCommand -> CommandResult
activate CommandResult

CommandResult --> FindCommand
deactivate CommandResult

FindCommand --> LogicManager : result
deactivate FindCommand

[<--LogicManager
deactivate LogicManager
destroy FindCommand
destroy ChainedPredicate
@enduml
