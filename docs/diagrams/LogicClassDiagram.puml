@startuml
!include style.puml
skinparam arrowThickness 1.1
skinparam arrowColor LOGIC_COLOR_T4
skinparam classBackgroundColor LOGIC_COLOR
skinparam classFontSize 18
skinparam packageFontSize 20

package Logic {

package Parser {
Interface Parser <<Interface>>
Class SiasaParser
Class XYZCommandParser
Class CliSyntax
Class ParserUtil
Class ArgumentMultiMap
Class ArguemtnTokenizer
Class Prefix
}

package Command {
Class XYZCommand
Class CommandResult
Class UiCommand
Class "{abstract}\nCommand" as Command
}

Interface Logic <<Interface>>
Class LogicManager
}

package Model{
Class HiddenModel #FFFFFF
}

package Storage{
Class HiddenModel #FFFFFF
}

Class HiddenOutside #FFFFFF
HiddenOutside ..> Logic

LogicManager .up.|> Logic
LogicManager -->"1" SiasaParser
SiasaParser .left.> XYZCommandParser: creates >

XYZCommandParser ..> XYZCommand: creates >
XYZCommandParser .left.|> Parser
XYZCommandParser ..> ArgumentMultiMap
XYZCommandParser ..> CliSyntax
CliSyntax ..> Prefix
XYZCommandParser ..> ArguemtnTokenizer
ArguemtnTokenizer .left.> ArgumentMultiMap
XYZCommandParser ..> ParserUtil
ParserUtil ..> Prefix
ArguemtnTokenizer ..> Prefix

XYZCommand .up.>Command
LogicManager ..> Command: executes >

LogicManager --> Model
LogicManager --> Storage
Command .up.> Storage
Command .up.> Model
note right of XYZCommand: XYZCommand = \nAddPolicyCommand, \nContactPolicyCommand, etc.

Logic .right.> CommandResult
LogicManager ..> CommandResult
Command .up.> CommandResult
Command .up.> UiCommand
CommandResult -right-> UiCommand
@enduml
