@startuml
!include style.puml
skinparam arrowThickness 1.1
skinparam arrowColor LOGIC_COLOR_T4
skinparam classBackgroundColor LOGIC_COLOR

package Logic {

Class FridgyParser
Class XYZCommand
Class "<<interface>>\nCommandExecutor" as CommandExecutor
Class CommandResult
Class "{abstract}\nCommand" as Command


Interface Logic <<Interface>>
Class LogicManager
}

package Model{
Class HiddenModel #FFFFFF
}

package Storage{
}

Class HiddenOutside #FFFFFF
HiddenOutside ..> Logic

LogicManager .right.|> Logic
LogicManager -right->"1" FridgyParser
FridgyParser ..> CommandExecutor : creates >

XYZCommand -up-|> Command
LogicManager .left.> CommandExecutor : apply >

CommandExecutor .left.> Command : execute >
note right of CommandExecutor : A functional interface \n that exposes Command's \n execute function.

LogicManager --> Model
LogicManager --> Storage
Storage --[hidden] Model
Command .[hidden]up.> Storage
Command .right.> Model
note right of XYZCommand: XYZCommand = AddCommand, \nFindCommand, etc

Logic ..> CommandResult
LogicManager .down.> CommandResult
Command .up.> CommandResult : produces >
@enduml
