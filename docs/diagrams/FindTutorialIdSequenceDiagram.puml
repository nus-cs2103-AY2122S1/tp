@startuml
!include style.puml
box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":FindCommandParser" as FindCommandParser LOGIC_COLOR
participant "d:FindCommand" as FindCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
participant ":TutorialIdOrRoleContainsKeywordsPredicate" as TutorialIdOrRoleContainsKeywordsPredicate LOGIC_COLOR
end box
box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box
[-> LogicManager : execute("find T/01")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("find T/01")
activate AddressBookParser

create FindCommandParser
AddressBookParser -> FindCommandParser
activate FindCommandParser

FindCommandParser --> AddressBookParser
deactivate FindCommandParser

AddressBookParser -> FindCommandParser : parse("find T/01")
activate FindCommandParser

create FindCommand
FindCommandParser -> FindCommand
activate FindCommand

FindCommand -> TutorialIdOrRoleContainsKeywordsPredicate: test("01")
activate TutorialIdOrRoleContainsKeywordsPredicate

TutorialIdOrRoleContainsKeywordsPredicate --> FindCommand
deactivate TutorialIdOrRoleContainsKeywordsPredicate

FindCommand --> FindCommandParser
deactivate FindCommand

FindCommandParser --> AddressBookParser
deactivate FindCommandParser

FindCommandParser -[hidden]-> AddressBookParser
destroy FindCommandParser

AddressBookParser --> LogicManager
deactivate AddressBookParser

LogicManager -> FindCommand : execute()
activate FindCommand

FindCommand -> Model : updateFilteredPersonList(predicate)
activate Model

Model --> FindCommand
deactivate Model

create CommandResult
FindCommand -> CommandResult
activate CommandResult

CommandResult --> FindCommand
deactivate CommandResult

deactivate FindCommand

FindCommand --> LogicManager : result
deactivate FindCommand

[<--LogicManager
deactivate LogicManager
@enduml
