@startuml
!include ../style.puml

box UI UI_COLOR_T1
participant ":MainWindow" as MainWindow UI_COLOR
participant "ReportWindow" as ReportWindow UI_COLOR
participant "JobDisplay" as JobDisplay UI_COLOR
participant ":GraphDisplay" as GraphDisplay UI_COLOR
end box

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":PrintReportCommand" as PrintReportCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box

[-> MainWindow : executeCommand("printReport -i")
activate MainWindow

MainWindow -> LogicManager : execute("printReport -i")
activate LogicManager

ref over LogicManager, PrintReportCommand : parse print report


LogicManager --> MainWindow
deactivate LogicManager

MainWindow -> CommandResult : getCommandFlag()
activate CommandResult

CommandResult --> MainWindow : flag
deactivate CommandResult

MainWindow -> ReportWindow : fillInnerParts(flag)
activate ReportWindow

ReportWindow -> JobDisplay : init()
activate JobDisplay

' first get
JobDisplay -> LogicManager : getFilteredMonthlyCompletedJobList()
activate LogicManager
LogicManager -> Model : getFilteredMonthlyCompletedJobList()
activate Model

Model --> LogicManager : completedJobList
deactivate Model
LogicManager --> JobDisplay : completedJobList
deactivate LogicManager

' second get
JobDisplay -> LogicManager : getFilteredIncompleteJobList()
activate LogicManager
LogicManager -> Model : getFilteredIncompleteJobList()
activate Model

Model --> LogicManager : incompletedJobList
deactivate Model
LogicManager --> JobDisplay : incompletedJobList
deactivate LogicManager

' third get
JobDisplay -> LogicManager : getFilteredTopThreeProductList()
activate LogicManager
LogicManager -> Model : getFilteredTopThreeProductList()
activate Model

Model --> LogicManager : requiredProductList
deactivate Model
LogicManager --> JobDisplay : requiredProductList
deactivate LogicManager

JobDisplay --> ReportWindow
deactivate JobDisplay

ReportWindow -> GraphDisplay : init()
activate GraphDisplay

GraphDisplay -> GraphDisplay :  getLastFourMonthRevenue(now)
activate GraphDisplay

' fourth get
GraphDisplay -> LogicManager : getRevenue(now)
activate LogicManager
LogicManager -> Model : getRevenue((now)
activate Model

Model --> LogicManager : revenue
deactivate Model
LogicManager --> GraphDisplay : revenue
deactivate LogicManager

GraphDisplay --> GraphDisplay
deactivate GraphDisplay
GraphDisplay --> ReportWindow
deactivate GraphDisplay

ReportWindow --> MainWindow
deactivate ReportWindow

[<-- MainWindow
deactivate MainWindow
@enduml
