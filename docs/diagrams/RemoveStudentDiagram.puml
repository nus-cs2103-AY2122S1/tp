@startuml
!include style.puml

title RemoveStudentCommand

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR_T3
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR_T2
participant ":RemoveStudentCommandParser" as RemoveStudentCommandParser LOGIC_COLOR_T3
participant "removeCmd:RemoveStudentCommand" as RemoveStudentCommand LOGIC_COLOR_T2
participant ":CommandResult" as CommandResult LOGIC_COLOR_T3
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute\n("remove si/1 2 tc/3")
activate LogicManager LOGIC_COLOR_T3

LogicManager -[LOGIC_COLOR_T3]> AddressBookParser : parseCommand\n("remove si/1 2 tc/3")
activate AddressBookParser LOGIC_COLOR_T2

create RemoveStudentCommandParser
AddressBookParser -[LOGIC_COLOR_T2]> RemoveStudentCommandParser
activate RemoveStudentCommandParser LOGIC_COLOR_T3

RemoveStudentCommandParser -[LOGIC_COLOR_T3]-> AddressBookParser
deactivate RemoveStudentCommandParser

AddressBookParser -[LOGIC_COLOR_T2]> RemoveStudentCommandParser : parse("si/1 2 tc/3")
activate RemoveStudentCommandParser LOGIC_COLOR_T3

create RemoveStudentCommand
RemoveStudentCommandParser -[LOGIC_COLOR_T3]> RemoveStudentCommand
activate RemoveStudentCommand LOGIC_COLOR_T2

RemoveStudentCommand -[LOGIC_COLOR_T2]-> RemoveStudentCommandParser : removeCmd
deactivate RemoveStudentCommand

RemoveStudentCommandParser -[LOGIC_COLOR_T3]-> AddressBookParser : removeCmd
deactivate RemoveStudentCommandParser
RemoveStudentCommandParser -[hidden]-> AddressBookParser
destroy RemoveStudentCommandParser

AddressBookParser -[LOGIC_COLOR_T2]-> LogicManager : removeCmd
deactivate AddressBookParser

LogicManager -[LOGIC_COLOR_T3]> RemoveStudentCommand : execute()
activate RemoveStudentCommand LOGIC_COLOR_T2

RemoveStudentCommand -[LOGIC_COLOR_T2]> Model : getTuitionClass(3)
activate Model MODEL_COLOR

Model --> RemoveStudentCommand : tuition class
deactivate Model

group
    loop for each student index
    RemoveStudentCommand -[LOGIC_COLOR_T2]> Model : getStudent(index)
    activate Model MODEL_COLOR
    Model --> RemoveStudentCommand : student
    deactivate Model

    alt student exists in class
    RemoveStudentCommand -[LOGIC_COLOR_T2]> Model : removeStudent(student)
    activate Model MODEL_COLOR
    Model --> RemoveStudentCommand : updatedClass
    deactivate Model
    else invalid student
       RemoveStudentCommand -[LOGIC_COLOR_T2]> RemoveStudentCommand : updateInvalidStudents(student)
       activate RemoveStudentCommand LOGIC_COLOR_T3
       RemoveStudentCommand -[LOGIC_COLOR_T4]-> RemoveStudentCommand
       deactivate RemoveStudentCommand
    end
end

create CommandResult
RemoveStudentCommand -[LOGIC_COLOR_T2]> CommandResult
activate CommandResult LOGIC_COLOR_T3

CommandResult -[LOGIC_COLOR_T3]-> RemoveStudentCommand
deactivate CommandResult

RemoveStudentCommand -[LOGIC_COLOR_T2]-> LogicManager : result
deactivate RemoveStudentCommand

[<-[LOGIC_COLOR_T2]-LogicManager
deactivate LogicManager
@enduml
