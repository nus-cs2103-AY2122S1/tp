@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":EditCommandParser" as EditCommandParser LOGIC_COLOR
participant "<<class>>\nArgumentTokenizer" as ArgumentTokenizer LOGIC_COLOR
participant "EditPersonDescriptor" as EditPersonDescriptor LOGIC_COLOR
participant ":EditCommand" as EditCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("edit 1 n/Ali")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("edit 1 n/Ali")
activate AddressBookParser

create EditCommandParser



AddressBookParser -> EditCommandParser: EditCommandParser()
activate EditCommandParser

EditCommandParser --> AddressBookParser

deactivate EditCommandParser

AddressBookParser -> EditCommandParser : parse(" 1 n/Ali")
activate EditCommandParser

EditCommandParser -> ArgumentTokenizer : tokenize()
activate ArgumentTokenizer

ArgumentTokenizer --> EditCommandParser
deactivate ArgumentTokenizer

create EditPersonDescriptor
EditCommandParser -> EditPersonDescriptor : EditPersonDescriptor()
activate EditPersonDescriptor

EditPersonDescriptor --> EditCommandParser
deactivate EditPersonDescriptor

EditCommandParser -> EditPersonDescriptor : setName()
activate EditPersonDescriptor

EditPersonDescriptor --> EditCommandParser
deactivate

create EditCommand
EditCommandParser -> EditCommand : EditCommand()
activate EditCommand

EditCommand --> EditCommandParser
deactivate

EditCommandParser --> AddressBookParser
deactivate

'Hidden arrow to position the destroy marker below the end of the activation bar.
EditCommandParser -[hidden]-> AddressBookParser:
destroy EditCommandParser

AddressBookParser --> LogicManager
deactivate AddressBookParser

LogicManager -> EditCommand : execute()
activate EditCommand

EditCommand -> EditCommand : createEditedPerson()
activate EditCommand

EditCommand --> EditCommand : editedPerson
deactivate

EditCommand -> Model : hasPerson(editedPerson)
activate Model

Model --> EditCommand
deactivate

EditCommand -> Model : setPerson(editedPerson)
activate Model

Model --> EditCommand
deactivate

EditCommand -> Model : updateFilteredPersonList()
activate Model

Model --> EditCommand
deactivate

create CommandResult
EditCommand -> CommandResult
activate CommandResult

CommandResult --> EditCommand
deactivate CommandResult

EditCommand --> LogicManager : result
deactivate EditCommand

[<--LogicManager
deactivate LogicManager
@enduml
